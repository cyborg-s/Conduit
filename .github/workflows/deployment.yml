name: Build & Deploy Conduit

on:
  # Automatic deployment when pushing to the "Deploy" branch
  push:
    branches: [ "Deploy" ]

  # Manual triggering possible
  workflow_dispatch:

env:
  IMAGE_OWNER: cyborg-s  

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout repository including submodules
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create .env file
        run: |
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "DJANGO_SUPERUSER_USERNAME=${{ secrets.DJANGO_SUPERUSER_USERNAME }}" >> .env
          echo "DJANGO_SUPERUSER_EMAIL=${{ secrets.DJANGO_SUPERUSER_EMAIL }}" >> .env
          echo "DJANGO_SUPERUSER_PASSWORD=${{ secrets.DJANGO_SUPERUSER_PASSWORD }}" >> .env
          echo "DEBUG=${{ vars.DEBUG }}" >> .env
          echo "ALLOWED_HOSTS=${{ vars.ALLOWED_HOSTS }}" >> .env
          echo "CORS_ORIGIN_WHITELIST=${{ vars.CORS_ORIGIN_WHITELIST }}" >> .env
          echo "API_URL=${{ vars.API_URL }}" >> .env
          echo "BACKEND_EXTERNAL_PORT=${{ vars.BACKEND_EXTERNAL_PORT }}" >> .env
          echo "FRONTEND_EXTERNAL_PORT=${{ vars.FRONTEND_EXTERNAL_PORT }}" >> .env

      - name: Build & Push Frontend Image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ghcr.io/${{ env.IMAGE_OWNER }}/conduit-frontend:latest
          build-args: |
            API_URL=${{ vars.API_URL }}

      - name: Build & Push Backend Image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ghcr.io/${{ env.IMAGE_OWNER }}/conduit-backend:latest

      - name: Store deployment files
        uses: actions/upload-artifact@v4
        with:
          name: deploy-files
          path: |
            .env
            compose.yaml
          include-hidden-files: true

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download deployment files
        uses: actions/download-artifact@v4
        with:
          name: deploy-files

      - name: Test SSH Key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | head -n 1


      - name: Copy files to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ".env,compose.yaml"
          target: ${{ secrets.DEPLOY_DIR }}
          overwrite: true

      - name: Restart containers via SSH
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e  # bricht bei Fehler sofort ab
            cd ${{ secrets.DEPLOY_DIR }}
            docker compose pull
            docker compose down --remove-orphans
            docker compose up -d
